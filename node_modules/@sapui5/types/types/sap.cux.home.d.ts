// For Library Version: 0.0.1

declare module "sap/cux/home/AppsContainer" {
  /**
   * Container class for managing and storing Apps.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class AppsContainer {
    /**
     * Constructor for a new Apps Container.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseContainer.$BaseContainerSettings */ any
    );
  }
}

declare module "sap/cux/home/CardsPanel" {
  /**
   * Panel class for managing and storing Cards.
   *
   * @since 1.122.0
   * @experimental (since 1.122.0)
   */
  export default class CardsPanel
    extends /* was: sap.cux.home.BasePanel */ Object
  {
    /**
     * Constructor for a new Cards Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.CardsPanel.$CardsPanelSettings */ any
    );
  }
}

declare module "sap/cux/home/FrequentAppPanel" {
  /**
   * Provides the class for managing frequent apps.
   *
   * @since 1.121.0
   * @experimental (since 1.121.0)
   */
  export default class FrequentAppPanel {
    /**
     * Constructor for a new Frequent Apps Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseAppPersPanel.$BaseAppPersPanelSettings */ any
    );
  }
}

declare module "sap/cux/home/InsightsContainer" {
  /**
   * Container class for managing and storing Insights tiles and cards.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class InsightsContainer {
    /**
     * Constructor for a new Insights Container.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseContainer.$BaseContainerSettings */ any
    );
  }
}

declare module "sap/cux/home/Layout" {
  /**
   * Layout class for My Home layout.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class Layout {
    /**
     * Constructor for a new Layout.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseLayout.$BaseLayoutSettings */ any
    );
  }
}

declare module "sap/cux/home/library" {
  /**
   * Supported Layout Types for {@link sap.cux.home.BaseContainer }.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export enum LayoutType {
    /**
     * Panels are rendered horizontally example pages and news
     */
    Horizontal = "undefined",
    /**
     * Panels are rendered side by side example todos and situaions, fav, recent and frequent apps
     */
    SideBySide = "undefined",
    /**
     * Panels are rendered vertically example insights cards and tiles
     */
    Vertical = "undefined",
  }
  /**
   * Supported News Types for {@link sap.cux.home.NewsPanel }.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export enum NewsType {
    /**
     * News is of type Custom news feed
     */
    Custom = "undefined",
    /**
     * Url is of type feed
     */
    Feed = "undefined",
    /**
     * Url is of type RSS
     */
    RSS = "undefined",
  }
}

declare module "sap/cux/home/MenuItem" {
  import { default as UI5Element, $ElementSettings } from "sap/ui/core/Element";

  import { URI } from "sap/ui/core/library";

  import { PropertyBindingInfo } from "sap/ui/base/ManagedObject";

  import Event from "sap/ui/base/Event";

  /**
   * Class for managing and storing Menu items.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class MenuItem extends UI5Element {
    /**
     * Constructor for a new Menu Item.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.MenuItem.$MenuItemSettings */ any
    );
  }
  /**
   * Describes the settings that can be provided to the MenuItem constructor.
   *
   * @experimental (since 1.121)
   */
  export interface $MenuItemSettings extends $ElementSettings {
    /**
     * Icon of the menu item.
     */
    icon?: URI | PropertyBindingInfo | `{${string}}`;

    /**
     * Title of the menu item.
     */
    title?: string | PropertyBindingInfo;

    /**
     * Type of menu item visualization in the menu list
     */
    type?: string | PropertyBindingInfo;
  }

  /**
   * Parameters of the MenuItem#press event.
   */
  export interface MenuItem$PressEventParameters {}

  /**
   * Event object of the MenuItem#press event.
   */
  export type MenuItem$PressEvent = Event<
    MenuItem$PressEventParameters,
    MenuItem
  >;
}

declare module "sap/cux/home/NewsAndPagesContainer" {
  /**
   * Container class for managing and storing News and Pages.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class NewsAndPagesContainer {
    /**
     * Constructor for a new News and Pages Container.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseContainer.$BaseContainerSettings */ any
    );

    /**
     * Sets property value for colorPersonalization.
     * Overridden to update cached personalizations.
     * Sets a new value for property "colorPersonalizations".
     * Color Personalizations for Spaces & Pages
     * When called with a value of "null" or "undefined", the default value of the property will be restored.
     * Default value is: []
     *
     *
     *
     * @returns the container for chaining
     */
    setColorPersonalizations(): NewsAndPagesContainer;
    /**
     * Sets property value for iconPersonalization.
     * Overridden to update cached personalizations.
     * Sets a new value for property "iconPersonalizations".
     * Icon Personalizations for Spaces & Pages
     * When called with a value of "null" or "undefined", the default value of the property will be restored.
     * Default value is: []
     *
     *
     *
     * @returns the container for chaining
     */
    setIconPersonalizations(): NewsAndPagesContainer;
  }
}

declare module "sap/cux/home/NewsPanel" {
  /**
   * Panel class for managing and storing News.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class NewsPanel {
    /**
     * Constructor for a new News Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseNewsPanel.$BaseNewsPanelSettings */ any
    );
  }
}

declare module "sap/cux/home/NoDataContainer" {
  /**
   * Container class to show no data content.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class NoDataContainer
    extends /* was: sap.cux.home.BaseContainer */ Object {}
}

declare module "sap/cux/home/PagePanel" {
  /**
   * Panel class for managing and storing Pages.
   *
   * @since 1.122
   * @experimental (since 1.122)
   */
  export default class PagePanel {
    /**
     * Constructor for a new Page Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BasePagePanel.$BasePagePanelSettings */ any
    );
  }
}

declare module "sap/cux/home/RecentAppPanel" {
  /**
   * Provides class for managing Recent apps.
   *
   * @since 1.121.0
   * @experimental (since 1.121.0)
   */
  export default class RecentAppPanel {
    /**
     * Constructor for a new Recent Apps Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseAppPersPanel.$BaseAppPersPanelSettings */ any
    );
  }
}

declare module "sap/cux/home/SituationPanel" {
  /**
   * Panel class for managing and storing Situation cards.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class SituationPanel
    implements /* was: sap.cux.home.ToDoPanel.IToDoPanel */ Object
  {
    __implements__sap_cux_home_ToDoPanel_IToDoPanel: boolean;
    /**
     * Constructor for a new Situation Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.ToDoPanel.$ToDoPanelSettings */ any
    );
  }
}

declare module "sap/cux/home/TaskPanel" {
  /**
   * Panel class for managing and storing Task cards.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class TaskPanel
    implements /* was: sap.cux.home.ToDoPanel.IToDoPanel */ Object
  {
    __implements__sap_cux_home_ToDoPanel_IToDoPanel: boolean;
    /**
     * Constructor for a new Task Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.TaskPanel.$TaskPanelSettings */ any
    );
  }
}

declare module "sap/cux/home/TilesPanel" {
  /**
   * Tiles Panel class for managing and storing Tiles.
   *
   * @since 1.122.0
   * @experimental (since 1.122.0)
   */
  export default class TilesPanel
    extends /* was: sap.cux.home.BasePanel */ Object
  {
    /**
     * Constructor for a new Tiles Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.TilesPanel.$TilesPanelSettings */ any
    );
  }
}

declare module "sap/cux/home/ToDoPanel" {
  import Context from "sap/ui/model/Context";

  import Control from "sap/ui/core/Control";

  /**
   * Abstract Panel class for managing and storing To-Do cards.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class ToDoPanel
    extends /* was: sap.cux.home.BasePanel */ Object
    implements /* was: sap.cux.home.ToDoPanel.IToDoPanel */ Object
  {
    __implements__sap_cux_home_ToDoPanel_IToDoPanel: boolean;
    /**
     * Constructor for a new ToDo Panel.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.ToDoPanel.$ToDoPanelSettings */ any
    );

    /**
     * Generate a default card template for the Current Panel.
     * An extended panel can have it's own template by overridding
     * this method and providing a custom card template.
     *
     *
     * @returns The generated card template.
     */
    generateCardTemplate(
      /**
       * The ID for the template.
       */
      id: string,
      /**
       * The context for the template.
       */
      context: Context
    ): Control;
  }
}

declare module "sap/cux/home/ToDosContainer" {
  /**
   * Container class for managing and storing To-Do cards.
   *
   * @since 1.121
   * @experimental (since 1.121)
   */
  export default class ToDosContainer {
    /**
     * Constructor for a new ToDos Container.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      id?: string,
      /**
       * Initial settings for the new control
       */
      settings?: /* was: sap.cux.home.BaseContainer.$BaseContainerSettings */ any
    );

    /**
     * Gets the selected key of the ToDosContainer.
     * If no selected key is set, it defaults to the first item.
     *
     *
     * @returns The selected key.
     */
    getSelectedKey(): string;
    /**
     * Asynchronously refreshes the section by forcing all inner panels to be reloaded.
     *
     *
     * @returns A promise that resolves when the section is successfully refreshed.
     */
    refreshData(): Promise<void>;
  }
}

declare namespace sap {
  interface IUI5DefineDependencyNames {
    "sap/cux/home/AppsContainer": undefined;

    "sap/cux/home/CardsPanel": undefined;

    "sap/cux/home/FrequentAppPanel": undefined;

    "sap/cux/home/InsightsContainer": undefined;

    "sap/cux/home/Layout": undefined;

    "sap/cux/home/library": undefined;

    "sap/cux/home/MenuItem": undefined;

    "sap/cux/home/NewsAndPagesContainer": undefined;

    "sap/cux/home/NewsPanel": undefined;

    "sap/cux/home/NoDataContainer": undefined;

    "sap/cux/home/PagePanel": undefined;

    "sap/cux/home/RecentAppPanel": undefined;

    "sap/cux/home/SituationPanel": undefined;

    "sap/cux/home/TaskPanel": undefined;

    "sap/cux/home/TilesPanel": undefined;

    "sap/cux/home/ToDoPanel": undefined;

    "sap/cux/home/ToDosContainer": undefined;
  }
}
