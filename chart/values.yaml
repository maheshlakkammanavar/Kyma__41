global:
  domain: cffc19e.stage.kyma.ondemand.com
  imagePullSecret:
    name: docker-registry
  image:
    registry: maheshlakkammanavar
    tag: latest
srv:
  bindings:
    db:
      serviceInstanceName: hana
    auth:
      serviceInstanceName: xsuaa
  image:
    repository: incident-management-srv
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /health
    readiness:
      path: /health
  expose:
    enabled: false
  networkSecurity:
    allowNamespaceInternal: true
approuter:
  image:
    repository: incident-management-approuter
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-approuter-configmap"
  bindings:
    html5-apps-repo-runtime:
      serviceInstanceName: 'html5-apps-repo-runtime'
    auth:
      serviceInstanceName: xsuaa  
    portal:
      serviceInstanceName: portal
      parameters:    
        appguid: ""
        app_guid: ""
        content-endpoint: developer
portal-deployer:
  image:
    repository: incident-management-portalcontent
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  bindings:
    auth:
      serviceInstanceName: xsuaa
    html5-apps-repo-host:
      serviceInstanceName: html5-apps-repo-host
    portal:
      serviceInstanceName: portal
  env:
    SERVICE_BINDING_ROOT: /bindings
    BPL_VCAP_SERVICES_ENABLED: "true"
    XSUAA_CREDENTIALS:
      secretKeyRef:
        name: "{{ .Release.Name }}-approuter-auth"
        key: credentials
    REPOHOST_CREDENTIALS:
      secretKeyRef:
        name: "{{ .Release.Name }}-html5-apps-deployer-html5-apps-repo"
        key: credentials
    PORTAL_CREDENTIALS:
      secretKeyRef:
        name: "{{ .Release.Name }}-approuter-portal"
        key: credentials      
backendDestinations:
  srv-api:
    service: srv
hana-deployer:
  image:
    repository: incident-management-hana-deployer
  bindings:
    hana:
      serviceInstanceName: hana
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
hana:
  serviceOfferingName: hana
  servicePlanName: hdi-shared
html5-apps-repo-host:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-host
html5-apps-deployer:
  image:
    repository: "incident-management-html5-deployer"
  bindings:
    xsuaa:
      serviceInstanceName: xsuaa
    destination:
      serviceInstanceName: destination
    html5-apps-repo:
      serviceInstanceName: html5-apps-repo-host
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-html5-apps-deployer-configmap"
destination:
  serviceOfferingName: destination
  servicePlanName: lite
  parameters:
    HTML5Runtime_enabled: true
html5-apps-repo-runtime:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-runtime
portal:
  serviceOfferingName: portal
  servicePlanName: standard
xsuaa:
  serviceOfferingName: xsuaa
  servicePlanName: application
  parameters:
    tenant-mode: dedicated
    oauth2-configuration:
      redirect-uris:
        - https://*.{{ tpl .Values.global.domain . }}/**
    xsappname: incident-management-{{ .Release.Namespace }}
